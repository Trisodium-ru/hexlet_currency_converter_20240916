import converter # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä.
import settings # –ü–æ–¥–∫–ª—é—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.

# –°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.
def get_events() -> dict:
    return {
        'help': '–≤—ã–≤–µ—Å—Ç–∏ –ø–æ–º–æ—â—å',
        'balance': '–≤—ã–≤–µ—Å—Ç–∏ –±–∞–ª–∞–Ω—Å',
        'currencies': '–≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –≤–∞–ª—é—Ç—ã',
        'convert': '–¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç',
        'great': '–≤—ã–≤–æ–¥ —Ç–æ–ø-3 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö –≤–∞–ª—é—Ç',
        'exit': '–≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã'
    }

# –°—Ç–∞—Ä—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–º–∞–Ω–¥.
def start():
    pass

# –í—ã–≤–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
def greetings() -> None:
    print('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –í–∞–ª—é—Ç!\n')

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π help.
    command_help()

# –í—ã–≤–æ–¥ –ø–æ–º–æ—â–∏.
def command_help() -> None:
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
    events = get_events()

    # –í—ã–≤–æ–¥–∏–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞.
    print('–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞:')
    i = 0
    for event, info in events.items():
        i += 1
        print(f'{i}. {event}: {info}')

# –ü–∞—Å—Ö–∞–ª–∫–∞.
def easter_egg():
    print('ü•öüêáüêæ')
    print('–ü–∞—Å—Ö–∞–ª–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞! –í—ã –Ω–∞—à–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ –∫—Ä–æ–º–µ exit :)')
    exit()

# –í—ã–≤–æ–¥ –±–∞–ª–∞–Ω—Å–∞.
def command_balance() -> None :
    print(f'–í–∞—à –±–∞–ª–∞–Ω—Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–π: {settings.convertation_paid}.\n–ö–æ–≥–¥–∞ –æ–Ω–∏ –∑–∞–∫–æ–Ω—á–∞—Ç—Å—è - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–ª—å–∑—è.')

# –í—ã–≤–æ–¥ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –≤–∞–ª—é—Ç.
def command_currencies() -> None :
    print('–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:')
    # –í—ã–≤–æ–¥–∏–º –≤—Å–µ –≤–∞–ª—é—Ç—ã –ø–æ—Å—Ç—Ä–æ—á–Ω–æ –∏–∑ —Å–ª–æ–≤–∞—Ä—è.
    for currency in settings.currencies.values():
        print(f'- {currency['CharCode']} [{currency['Value']} RUB] - {currency['Name']}')
    print('–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã —É–∫–∞–∑–∞–Ω—ã –≤—ã—à–µ ‚Üë. –î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ: convert')

# –ù–∞—á–∞–ª–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç.
def command_convert() -> bool:
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–π –ø–µ—Ä–µ–¥ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–µ–π.
    if settings.convertation_paid == 0:
        print('–û–π, –∫–∞–∂–µ—Ç—Å—è, –≤—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –ª–∏–º–∏—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–π. –í–µ–¥—å–º–∞–∫—É –∑–∞–ø–ª–∞—Ç–∏—Ç–µ —á–µ–∫–∞–Ω–Ω–æ–π –º–æ–Ω–µ—Ç–æ–π.')
        return False

    # –û–∂–∏–¥–∏–Ω–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏—Å—Ö–æ–¥–Ω—É—é –≤–∞–ª—é—Ç—É.
    original_currency = input('1. –í–≤–µ–¥–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é –≤–∞–ª—é—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞: ').strip().upper()
    if not is_currency(original_currency):
        print('–ò—Å—Ö–æ–¥–Ω–∞—è –≤–∞–ª—é—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ convert –∏–ª–∏ –≤—ã–∑–æ–≤–∏—Ç–µ —Å–ø—Ä–∞–≤–∫—É help.')
        return False

    # –û–∂–∏–¥–∏–Ω–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â—É—é –≤–∞–ª—é—Ç—É.
    result_currency = input('2. –í–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â—É—é –≤–∞–ª—é—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞: ').strip().upper()
    if not is_currency(result_currency):
        print('–†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è –≤–∞–ª—é—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ convert –∏–ª–∏ –≤—ã–∑–æ–≤–∏—Ç–µ —Å–ø—Ä–∞–≤–∫—É help.')
        return False

    # –û–∂–∏–¥–∏–Ω–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã.
    original_amount = get_number(input('3. –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã: ').strip())
    if not original_amount:
        print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –∏–ª–∏ —á–∏—Å–ª–æ–º —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π/–∑–∞–ø—è—Ç–æ–π –Ω–µ —Ä–∞–≤–Ω—ã–º –Ω—É–ª—é.')
        print('–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ convert –∏–ª–∏ –≤—ã–∑–æ–≤–∏—Ç–µ —Å–ø—Ä–∞–≤–∫—É help.')
        return False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã.
    if original_amount < 0:
        print(f'–ö–∞–∂–µ—Ç—Å—è, —É –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Å—Ä–µ–¥—Å—Ç–≤–∞, —Ç–∞–∫ –∫–∞–∫ {original_amount} {original_currency} –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –∫—Ä–ï–¥–∏—Ç, –∞ –Ω–µ –¥–ï–±–µ—Ç :(')
        return False

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â—É—é.
    result_amount = converter.convert(original_currency, result_currency, original_amount, settings.currencies)

    # –°–Ω–∏–º–∞–µ–º 1 –±–∞–ª–ª –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏.
    settings.convertation_paid -= 1

    print(f'{original_amount} {original_currency} = {result_amount} {result_currency}')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª—é—Ç—É, –∏ –≤–∞–ª—é—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞.
def is_currency(currency: str) -> bool:
    return currency.isalpha() and currency in settings.currencies.keys()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã.
def get_number(str_number: str) -> float:
    # –í–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏.
    value = 0

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞.
    sign = -1 if str_number[0] == '-' else 1

    # –ï—Å–ª–∏ –µ—Å—Ç—å –∑–Ω–∞–∫ –º–∏–Ω—É—Å–∞ –±–µ—Ä—ë–º —Å—Ä–µ–∑ —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ —É—á—ë—Ç–∞ –º–∏–Ω—É—Å–∞.
    if sign == -1:
        str_number = str_number[1:]

    # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—ã–µ –Ω–∞ —Ç–æ—á–∫–∏, —á—Ç–æ–±—ã –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ–¥–Ω–æ–º—É —Ç–∏–ø—É –¥—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞.
    str_number.replace(',', '.')

    # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ —Ç–æ—á–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–ª—ã–µ –∏ –¥—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞.
    number = str_number.split('.')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–∏—Ç–æ–µ —á–∏—Å–ª–æ –ø–æ —Ç–æ—á–∫–µ.
    match len(number):
        case 1: # –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –∏–∑ 1 —ç–ª–µ–º–µ–Ω—Ç–∞ - —ç—Ç–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.
            return int(str_number) if str_number.isnumeric() else 0
        case 2: # –ï—Å–ª–∏ 2 —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ - —ç—Ç–æ –¥—Ä–æ–±–Ω–æ–µ.
            if number[0].isnumeric() and number[1].isnumeric():
                value = int(number[0]) + int(number[1]) / 10 ** len(number[1])

    # –í—ã–≤–æ–¥–∏–º —á–∏—Å–ª–æ —Å–æ –∑–Ω–∞–∫–æ–º.
    return sign * value

# –í—ã–≤–æ–¥ –ø—Ä–æ—â–∞–Ω–∏—è.
def command_exit() -> None:
    print('–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–∫—Ä—ã—Ç–∞. Bye bye!')
    exit()

# –í—ã–≤–æ–¥ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã/—Å–æ–±—ã—Ç–∏—è.
def unknown_event(event: str) -> None:
    print(f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ "{event}". –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π help.')

# –í–æ–ø—Ä–æ—Å –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –≤–≤–æ–¥–∞.
def start_command(event: str) -> None:
    # –ü—Ä–æ–ø—É—Å—Ç–∏–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã –≤—ã–≤–æ–¥–∞.
    print(f'\n‚Üì ‚Üì ‚Üì –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã {event} –Ω–∏–∂–µ ‚Üì ‚Üì ‚Üì\n')

# –í–æ–ø—Ä–æ—Å –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –≤–≤–æ–¥–∞.
def end_command(event: str) -> None:
    # –ü—Ä–æ–ø—É—Å—Ç–∏–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã –≤—ã–≤–æ–¥–∞.
    print(f'\n‚Üë ‚Üë ‚Üë –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã {event} –≤—ã—à–µ ‚Üë ‚Üë ‚Üë')
    print(f'\n–•–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –µ—â—ë? –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ')

# –í—ã–≤–µ—Å—Ç–∏ —Ç–æ–ø 3 –¥–æ—Ä–æ–≥–∏–µ –≤–∞–ª—é—Ç—ã.
def command_great() -> None:
    print('üèÜ –¢–æ–ø-3 –¥–æ—Ä–æ–≥–∏–µ –≤–∞–ª—é—Ç—ã')
    greatest = sorted(settings.currencies.values(), key = lambda d: d['Value'], reverse = True)[0:3]
    for great_currency in greatest:
        print(f'{great_currency['CharCode']} [{great_currency['Value']} RUB] - {great_currency['Name']}')
